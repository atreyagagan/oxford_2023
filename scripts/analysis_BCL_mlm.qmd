---
title: "BCL Cross-country Data <br> Multi-level Modeling"
author: Gagan Atreya
date: today
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 4
    theme: lumen
    fontsize: large
    code-fold: true
    code-tools: true
    code-summary: "Display code"
    code-overflow: wrap
editor: 
  markdown: 
    wrap: 72
---

```{r, error = F, message = F, warning = F}

rm(list=ls())
options(digits = 2)

## Install "pacman" package if not installed
# (remove the # symbol from the line below):
# install.packages("pacman")

## Load R packages:
pacman::p_load(data.table, tidyverse, haven, labelled, vtable, 
               psych, scales, weights, clipr, forcats,
               stargazer, ggthemes, ggcharts, geomtextpath,
               corrplot, tm, gt, lme4, car, lmerTest, 
               ggeffects, magrittr, broom, broom.mixed,
               backports, effects, interactions, plyr)

## Import latest BCL dataset:
ds <- fread("~/Desktop/oxford/data/BCL/BCL01.csv")
ds <- as.data.table(ds)

ds$Empathic_concern <- ds$empathic_concern
ds$Perspective_taking <- ds$perspective_taking

```

# **Section 1. Multi-level modeling: Endorse_BCL**

***Note: *** Read pg. 259 of Gelman \& Hill (2016) for reference. Also read [this online guide](https://quantdev.ssri.psu.edu/tutorials/r-bootcamp-introduction-multilevel-model-and-interactions){target="blank"} for reference. 


## Unconditional means model

Also called "varying intercept model with no predictors" (Gelman and Hill, 2016, Chapter 12).

```{r, error = F, message = F, warning = F}

## Varying intercept model with no predictors:
m00<- lmer(formula = Endorse_BCL ~ 1 + (1 | Country), 
           data = ds)

summary(m00)
```

## Random intercept models

Also called "varying intercept model with individual-level predictors" (Gelman and Hill, 2016, Chapter 12).

```{r, error = F, message = F, warning = F}

## Varying intercept models with individual-level predictors:

m01 <- lmer(formula = Endorse_BCL~IG_Fusion+IG_Identification+OG_Bonds+Empathic_concern+
              Perspective_taking+Age+Female+Married+Wealth_level+ 
              (1 | Country), 
            data = ds)

summary(m01)

```


```{r, error = F, message = F, warning = F, results = "hide"}

## Change class of all models so we can use stargazer():
class(m00) <- "lmerMod"
class(m01) <- "lmerMod"

## Tabulated results:
stargazer(m00, m01,
          type = "html", 
          star.cutoffs = c(0.05, 0.01, 0.001),
          out = "table1.html")

```


```{r}
htmltools::includeHTML("table1.html")

```

## Histogram: Endorsement of BCL

```{r, error = F, message = F, warning = F}

summary(ds$Endorse_BCL)

ggplot(data = ds, 
       aes(x = Endorse_BCL)) +
  geom_histogram(color = "black",
                 bins = 20)+
  geom_textvline(label = "Mean = 5.00", 
                 xintercept = 5.00, 
                 vjust = 1.1, 
                 lwd = 1.05, 
                 linetype = 2)+
  labs(y = "Frequency",
       x = "Endorse_BCL score", 
       title = "Endorse_BCL")+
  theme_bw()


ggplot(data = ds, 
       aes(x = Endorse_BCL)) +
  geom_histogram(color = "black",
                 bins = 20) +
  labs(y = "Frequency",
       x = "Endorse_BCL score", 
       title = "Endorse_BCL")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()


ggplot(data = ds, 
       aes(x = Endorse_BCL, 
           y = Country)) +
  geom_boxplot(color = "black",
               fill = "grey")+
  geom_textvline(label = "Mean = 5.00", 
                 xintercept = 5.00, 
                 vjust = 1.1, 
                 lwd = 1.05, 
                 linetype = 2)+
  labs(y = "Frequency",
       x = "Endorse_BCL score", 
       title = "Endorse_BCL")+
  theme_bw()

```

## Faceted plots: Endorse BCL vs Ingroup fusion

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BCL,
           x = IG_Fusion)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "IG_Fusion score",
       y = "Endorse_BCL score", 
       title = "Endorse_BCL Vs Ingroup fusion")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

## Faceted plots: Endorse BCL vs Ingroup identification

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BCL,
           x = IG_Identification)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "IG_Identification score",
       y = "Endorse_BCL score", 
       title = "Endorse_BCL Vs Ingroup identification")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

## Faceted plots: Endorse BCL vs Outgroup bonds

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BCL,
           x = OG_Bonds)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "OG_Bonds score",
       y = "Endorse_BCL score", 
       title = "Endorse_BCL Vs Outgroup bonds")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

## Faceted plots: Endorse BCL vs Empathetic concern

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BCL,
           x = Empathic_concern)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "Empathic_concern score",
       y = "Endorse_BCL score", 
       title = "Endorse_BCL Vs Empathetic concern")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```


## Faceted plots: Endorse BCL vs Perspective taking

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BCL,
           x = Perspective_taking)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "Perspective_taking score",
       y = "Endorse_BCL score", 
       title = "Endorse_BCL Vs Perspective taking")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

# **Section 2. Multi-level modeling: Endorse_BBL**


## Unconditional means model

```{r, error = F, message = F, warning = F}

## Varying intercept model with no predictors:

m02<- lmer(formula = Endorse_BBL ~ 1 + (1 | Country), 
           data = ds)

summary(m02)

```


## Random intercept models

```{r, error = F, message = F, warning = F}

## Varying intercept models with individual-level predictors:

m03 <- lmer(formula = Endorse_BBL~IG_Fusion+IG_Identification+OG_Bonds+Empathic_concern+
              Perspective_taking+Age+Female+Married+Wealth_level+ 
              (1 | Country), 
            data = ds)

summary(m03)

```


```{r, error = F, message = F, warning = F, results = "hide"}

## Change class of all models so we can use stargazer():
class(m02) <- "lmerMod"
class(m03) <- "lmerMod"

## Tabulated results:
stargazer(m02, m03,
          type = "html", 
          star.cutoffs = c(0.05, 0.01, 0.001),
          out = "table1.html")

```


```{r}
htmltools::includeHTML("table1.html")

```

## Histogram: Endorsement of BBL

```{r, error = F, message = F, warning = F}

summary(ds$Endorse_BBL)

ggplot(data = ds, 
       aes(x = Endorse_BBL)) +
  geom_histogram(color = "black",
                 bins = 20)+
  geom_textvline(label = "Mean = 5.00", 
                 xintercept = 5.00, 
                 vjust = 1.1, 
                 lwd = 1.05, 
                 linetype = 2)+
  labs(y = "Frequency",
       x = "Endorse_BBL score", 
       title = "Endorse_BBL")+
  theme_bw()


ggplot(data = ds, 
       aes(x = Endorse_BBL)) +
  geom_histogram(color = "black",
                 bins = 20) +
  labs(y = "Frequency",
       x = "Endorse_BBL score", 
       title = "Endorse_BBL")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()


ggplot(data = ds, 
       aes(x = Endorse_BBL, 
           y = Country)) +
  geom_boxplot(color = "black",
               fill = "grey")+
  geom_textvline(label = "Mean = 5.00", 
                 xintercept = 5.00, 
                 vjust = 1.1, 
                 lwd = 1.05, 
                 linetype = 2)+
  labs(y = "Frequency",
       x = "Endorse_BBL score", 
       title = "Endorse_BBL")+
  theme_bw()

```


## Faceted plots: Endorse BBL vs Ingroup fusion

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BBL,
           x = IG_Fusion)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "IG_Fusion score",
       y = "Endorse_BBL score", 
       title = "Endorse_BBL Vs Ingroup fusion")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

## Faceted plots: Endorse BBL vs Ingroup identification

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BBL,
           x = IG_Identification)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "IG_Identification score",
       y = "Endorse_BBL score", 
       title = "Endorse_BBL Vs Ingroup identification")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

## Faceted plots: Endorse BBL vs Outgroup bonds

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BBL,
           x = OG_Bonds)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "OG_Bonds score",
       y = "Endorse_BBL score", 
       title = "Endorse_BBL Vs Outgroup bonds")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```

## Faceted plots: Endorse BBL vs Empathetic concern

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BBL,
           x = Empathic_concern)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "Empathic_concern score",
       y = "Endorse_BBL score", 
       title = "Endorse_BBL Vs Empathetic concern")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```


## Faceted plots: Endorse BBL vs Perspective taking

```{r, error = F, message = F, warning = F}

ggplot(data = ds, 
       aes(y = Endorse_BBL,
           x = Perspective_taking)) +
  geom_point() +
  stat_smooth(method="lm", 
              fullrange=TRUE) +
  labs(x = "Perspective_taking score",
       y = "Endorse_BBL score", 
       title = "Endorse_BBL Vs Perspective taking")+
  facet_wrap( ~ Country, nrow = 2) +
  theme_bw()

```


## Combined MLM results

```{r, error = F, message = F, warning = F, results = "hide"}
## Tabulated results:
stargazer(m00, m01, m02, m03,
          type = "html", 
          star.cutoffs = c(0.05, 0.01, 0.001),
          out = "table1.html")

```


```{r}
htmltools::includeHTML("table1.html")

```
