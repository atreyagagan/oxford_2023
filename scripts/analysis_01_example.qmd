---
title: "Example Data Analysis and Visualization <br> BCL Dataset"
author: Gagan Atreya
date: today
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 4
    theme: lumen
    fontsize: large
    code-fold: true
    code-tools: true
    code-summary: "Display code"
    code-overflow: wrap
editor: 
  markdown: 
    wrap: 72
---


# **Introduction**

This is a **sample analysis**. I use the entirety of the "BCL dataset" csv file, and proceed to do three things:

 - Data importation / cleaning 
 
 - Exploratory data visualization of several relevant variables 
 
 - Factor analysis and reliability analysis of one particular scale found in the dataset

All of the R code used in the analysis, as well as the test results can be seen in the code chunk sections, and the plots should be rendered in a standard web browser. Please let me know if any part of this analysis / visualization is unclear. 

# **Section 1: Data Cleaning and Exploratory Data Visualization**

```{r, warning=F, message=F}

rm(list=ls())

## Install "pacman" package if not installed
# (remove the # symbol from the line below):
# install.packages("pacman")

## Load R packages:
pacman::p_load(data.table, tidyverse, haven, vtable, 
               psych, scales, weights, clipr, forcats,
               stargazer, ggthemes, ggcharts, geomtextpath,
               corrplot)

## Import BCL dataset:
ds <- read_sav("~/Desktop/uganda_project/BCL Dataset.sav")
ds <- as.data.table(ds)

## Extract labels from categorical variables:
ds$Country <- as_factor(ds$Country)

```

## Variable: Country 

```{r, warning=F, message=F, echo = F, eval = F}

bp01 <- ds %>% drop_na(Country) %>%
  ggplot(aes(x = fct_rev(fct_infreq(Country))))+
  geom_bar(fill = "black")+
  labs(x = "Country",
       y = "Frequency",
       title = "Sample size by country")+
  coord_flip()+
  theme_bw()

bp01

```


```{r, warning=F, message=F}

lp01 <- ds %>% drop_na(Country) %>%
lollipop_chart(x = Country,
               line_color = "black",
               point_color = "black")+
  labs(y = "Frequency",
       title = "Sample size by country")+
  theme_bw()

lp01

```

## Variable: Age

```{r, warning = F, message = F}
ds <- ds %>% drop_na(age)
ds$age <- as.numeric(ds$age)

summary(ds$age)

ds %>% drop_na(age)%>%
ggplot(aes(x = age))+
  geom_histogram(color = "black",
                 fill = "gray",
                 bins = 50)+
  geom_textvline(label = "Mean = 29.65", 
                 xintercept = mean(ds$age), 
                 vjust = 1.3, 
                 lwd = 1.05, 
                 linetype = 2)+
  labs(x = "Age", 
       y = "Frequency", 
       title = "Age distribution (full sample)")+
  theme_bw()


ds %>% drop_na(Country)%>%
ggplot(aes(x = age, 
           y = Country, 
           color = Country))+
  geom_point(show.legend = FALSE)+
  labs(x = "Age",
       title = "Age distribution by country")+
  scale_color_colorblind()+
  theme_bw()

```

## Variable: Survey duration

```{r, warning = F, message = F}

ds$seconds <- ds$Duration__in_seconds_
ds$minutes <- (ds$seconds/60)
ds$hours <- (ds$minutes/60)

summary(ds$minutes)

ds %>% drop_na(Country)%>%
ggplot(aes(x = hours))+
  geom_histogram(color = "black",
                 fill = "gray",
                 bins = 200)+
  geom_textvline(label = "Mean = 0.97", 
                 xintercept = mean(ds$hours), 
                 vjust = 1.3, 
                 lwd = 1.05, 
                 linetype = 2)+
  labs(x = "Hours", 
       y = "Frequency", 
       title = "Survey duration (full sample)")+
  theme_bw()

ds %>% drop_na(Country)%>%
ggplot(aes(x = hours, 
           y = Country, 
           color = Country))+
  geom_point(show.legend = FALSE)+
  labs(x = "Hours",
       title = "Survey duration by country")+
  scale_color_colorblind()+
  theme_bw()

```


## Variable: Gender

```{r, warning = F, message = F}
ds$gend1 <- as_factor(ds$gend)
ds$gend2 <- as_factor(ds$gend_6_TEXT)

ds$gend3 <- ifelse(ds$gend2=="Female", "Female",
            ifelse(ds$gend2=="IM FEMAIL", "Female",
            ifelse(ds$gend2=="Male", "Male",
            ifelse(ds$gend2=="male", "Male", ""))))

ds$gender <- ifelse(ds$gend1 == "Male", "Male",
             ifelse(ds$gend3 == "Male", "Male",
             ifelse(ds$gend1 == "Female", "Female",
             ifelse(ds$gend3 == "Female", "Female", NA))))

table(ds$gender)

lp02 <- ds %>% drop_na(gender) %>%
lollipop_chart(x = gender,
               line_color = "black",
               point_color = "black")+
  labs(x = "Gender", 
       y = "Frequency",
       title = "Gender distribution")+
  theme_bw()

lp02

```

## Variable: Wealth level

```{r, warning = F, message = F}
ds$wealth_level <- as.numeric(ds$wealth_4)
summary(ds$wealth_level)

ds %>% drop_na(wealth_level, Country, gender) %>%
  ggplot(aes(y = wealth_level, 
             x = Country))+
  geom_violin(fill = "grey")+
  facet_wrap(~gender, 
             ncol = 2)+
  labs(y = "Self-reported relative wealth status")+
  coord_flip()+
  theme_bw()

```


## Variable: Education

```{r, warning = F, message=F}

ds$edu1 <- as_factor(ds$Education)

lp04 <- ds %>% drop_na(edu1) %>%
  group_by(edu1) %>% 
  summarise(count = n()) %>% 
  ggplot(aes(edu1, count)) + 
  geom_segment(aes(x=edu1, xend=edu1, 
                   y=0, yend=count))+ 
  geom_point()+
  labs(x = "", 
       y = "Frequency", 
       title = "Education distribution (full sample)")+
  coord_flip()+
  theme_bw()

lp04

```

## Variable: Religion 

```{r}
ds$religion2 <- as_factor(ds$religion)
ds$religion2 <- as.character(ds$religion2)

ds$religion2 <- ifelse(ds$religion2=="Other (please specify)", "Other", ds$religion2)

lp06 <- ds %>% drop_na(Country, religion2) %>%
lollipop_chart(x = religion2,
               line_color = "black",
               point_color = "black")+
  labs(x = "",
       y = "Frequency",
       title = "Religion distribution (full sample)")+
  theme_bw()

lp06

```

# **Section 2. Factor Analysis Example: BCL/BBL Endorsement**

## Correlation matrix

```{r, warning=F, message=F}

endorse <- cbind.data.frame(ds$endorse_style_1, ds$endorse_style_2, 
                            ds$endorse_style_3, ds$endorse_style_4, 
                            ds$endorse_style_5, ds$endorse_style_6)

endorse2 <- na.omit(endorse)

datamatrix <- cor(endorse2[, c(1:6)])
corrplot(datamatrix, method = "number")

```


## Kaiser-Meyer-Olkin (KMO) test of factorability:

```{r, warning=F, message=F}

KMO(r=cor(endorse2))

```

## Bartlett's test of sphericity:

```{r, warning=F, message=F}

cortest.bartlett(endorse2)

```

## Parrallel test:

```{r, warning=F, message=F}

parallel <- fa.parallel(endorse2)

```

## Factor Analysis: Two factor model with promax rotation:

```{r, warning=F, message=F}
fit <- factanal(endorse2, 2, rotation="promax")

print(fit, digits=2, cutoff=0.3, sort=TRUE)

```


## Reliability of BCL/BBL Endorsement Scale (Chronbach's Alpha)

```{r, warning=F, message=F}

## Reliability of endorsement scale:

psych::alpha(endorse)

```

